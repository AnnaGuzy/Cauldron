<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cauldron.Potions</name>
    </assembly>
    <members>
        <member name="T:Cauldron.Potions.INetwork">
            <summary>
            Provides properties and methods useful for gathering information about the network
            </summary>
        </member>
        <member name="P:Cauldron.Potions.INetwork.ConnectionType">
            <summary>
            Detect the current connection type
            </summary>
            <returns>
            2 for 2G, 3 for 3G, 4 for 4G
            100 for WiFi
            0 for unknown or not connected</returns>
        </member>
        <member name="P:Cauldron.Potions.INetwork.HasInternetConnection">
            <summary>
            Gets a value that indicates if internet connection is available
            </summary>
        </member>
        <member name="M:Cauldron.Potions.INetwork.Ping(System.String,System.UInt32)">
            <summary>
            Allows an application to determine whether a remote computer is accessible over the network.
            </summary>
            <param name="hostname">The hostname of the remote computer</param>
            <param name="port">The port to ping</param>
            <returns>An object that represents the ping results</returns>
        </member>
        <member name="T:Cauldron.Potions.ISerializer">
            <summary>
            Provides method that helps with serializing and deserializing an object
            </summary>
        </member>
        <member name="M:Cauldron.Potions.ISerializer.DeserializeAsync(System.Type,System.String)">
            <summary>
            Deserializes an object.
            </summary>
            <param name="type">The object type to deserialize</param>
            <param name="name">The name of the file</param>
            <returns>An instance of the deserialized object</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="type"/> is null</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="type"/> is a value type</exception>
        </member>
        <member name="M:Cauldron.Potions.ISerializer.DeserializeAsync(System.Type,Windows.Storage.StorageFolder,System.String)">
            <summary>
            Deserializes an object.
            </summary>
            <param name="type">The object type to deserialize</param>
            <param name="folder">The directory where the file resides</param>
            <param name="name">The name of the file</param>
            <returns>An instance of the deserialized object</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="type"/> is null</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="type"/> is a value type</exception>
        </member>
        <member name="M:Cauldron.Potions.ISerializer.DeserializeAsync``1(Windows.Storage.StorageFolder,System.String)">
            <summary>
            Deserializes an object.
            </summary>
            <param name="folder">The directory where the file resides</param>
            <param name="name">The name of the file</param>
            <returns>An instance of the deserialized object</returns>
        </member>
        <member name="M:Cauldron.Potions.ISerializer.DeserializeAsync``1(System.String)">
            <summary>
            Deserializes an object.
            </summary>
            <param name="name">The name of the file</param>
            <returns>An instance of the deserialized object</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/> is null</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="name"/> is a value type</exception>
        </member>
        <member name="M:Cauldron.Potions.ISerializer.Serialize(System.Object,Windows.Storage.StorageFolder,System.String)">
            <summary>
            Serializes an object.
            </summary>
            <param name="context">The object to serialize</param>
            <param name="name">The name of the file</param>
            <param name="folder">The directory where the file resides</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="context"/> is a value type</exception>
        </member>
        <member name="M:Cauldron.Potions.ISerializer.SerializeAsync(System.Object,System.String)">
            <summary>
            Serializes an object.
            </summary>
            <param name="context">The object to serialize</param>
            <param name="name">The name of the file</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="context"/> is a value type</exception>
        </member>
        <member name="M:Cauldron.Potions.ISerializer.SerializeAsync(System.Object,Windows.Storage.StorageFolder,System.String)">
            <summary>
            Serializes an object.
            </summary>
            <param name="context">The object to serialize</param>
            <param name="name">The name of the file</param>
            <param name="folder">The directory where the file resides</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="context"/> is null</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="context"/> is a value type</exception>
        </member>
        <member name="T:Cauldron.Potions.IUserInformation">
            <summary>
            Represents information about the user, such as name and account picture.
            </summary>
        </member>
        <member name="M:Cauldron.Potions.IUserInformation.GetDisplayNameAsync">
            <summary>
            Gets the display name for the user account.
            </summary>
            <returns>The display name for the user account.</returns>
        </member>
        <member name="M:Cauldron.Potions.IUserInformation.GetDomainNameAsync">
            <summary>
            Gets the domain name for the user.
            </summary>
            <returns>A string that represents the domain name for the user.</returns>
        </member>
        <member name="M:Cauldron.Potions.IUserInformation.GetFirstNameAsync">
            <summary>
            Gets the user's first name.
            </summary>
            <returns>The user's first name.</returns>
        </member>
        <member name="M:Cauldron.Potions.IUserInformation.GetLastNameAsync">
            <summary>
            Gets the user's last name.
            </summary>
            <returns>The user's last name.</returns>
        </member>
        <member name="M:Cauldron.Potions.IUserInformation.GetPrincipalNameAsync">
            <summary>
            Gets the principal name for the user. This name is the User Principal Name (typically the user's address, although this is not always true.)
            </summary>
            <returns> The user's principal name.</returns>
        </member>
        <member name="M:Cauldron.Potions.IUserInformation.GetUserNameAsync">
            <summary>
            Gets the user name of the user.
            </summary>
            <returns>A string that represents the user name of the user.</returns>
        </member>
        <member name="T:Cauldron.Potions.IWeb">
            <summary>
            Provides functions for web operations
            </summary>
        </member>
        <member name="M:Cauldron.Potions.IWeb.DownloadFile(System.Uri,Windows.Storage.StorageFile)">
            <summary>
            Starts an asyncronous download operation
            </summary>
            <param name="uri">The uri of the file</param>
            <param name="resultFile">The file that the response will be written to.</param>
        </member>
        <member name="T:Cauldron.Potions.Implementation.Network">
            <summary>
            A wrapper for <see cref="T:Cauldron.Core.Network"/>. See <see cref="T:Cauldron.Core.Network"/> for further details.
            </summary>
        </member>
        <member name="T:Cauldron.Potions.Implementation.Serializer">
            <summary>
            A wrapper for <see cref="T:Cauldron.Core.Serializer"/>.
            See <see cref="T:Cauldron.Core.Serializer"/> for further details.
            </summary>
        </member>
        <member name="T:Cauldron.Potions.Implementation.UserInformation">
            <summary>
            A wrapper for <see cref="T:Cauldron.Core.UserInformation"/>.
            See <see cref="T:Cauldron.Core.UserInformation"/> for further details.
            </summary>
        </member>
        <member name="T:Cauldron.Potions.Implementation.Web">
            <summary>
            A wrapper for <see cref="T:Cauldron.Core.Web"/>.
            See <see cref="T:Cauldron.Core.Web"/> for further details.
            </summary>
        </member>
    </members>
</doc>
