<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IConstructorInterceptor Interface</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IConstructorInterceptor interface" /><meta name="System.Keywords" content="Cauldron.Interception.IConstructorInterceptor interface" /><meta name="System.Keywords" content="IConstructorInterceptor interface, about IConstructorInterceptor interface" /><meta name="Microsoft.Help.F1" content="Cauldron.Interception.IConstructorInterceptor" /><meta name="Microsoft.Help.Id" content="T:Cauldron.Interception.IConstructorInterceptor" /><meta name="Description" content="Represents a contructor interceptor. Please note that is NOT supported by this interceptor." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Cauldron.Interception" /><meta name="file" content="953318c2-bf50-a4a6-5c6c-32bc25377add" /><meta name="guid" content="953318c2-bf50-a4a6-5c6c-32bc25377add" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Cauldron NetStandard Libraries<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3a2ae902-1f9e-4ec2-ad23-bb7f9bdd42b5.htm" title="Cauldron NetStandard Libraries" tocid="roottoc">Cauldron NetStandard Libraries</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d410258c-b9ce-c076-58e3-c0c31238bb3d.htm" title="Cauldron.Interception" tocid="d410258c-b9ce-c076-58e3-c0c31238bb3d">Cauldron.Interception</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="953318c2-bf50-a4a6-5c6c-32bc25377add.htm" title="IConstructorInterceptor Interface" tocid="953318c2-bf50-a4a6-5c6c-32bc25377add">IConstructorInterceptor Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e340ac3a-865c-fbf2-0d31-a78693276657.htm" title="IConstructorInterceptor Methods" tocid="e340ac3a-865c-fbf2-0d31-a78693276657">IConstructorInterceptor Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/cauldron2.png" /></td><td class="titleColumn"><h1>IConstructorInterceptor Interface</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             Represents a contructor interceptor.
             <p />
             Please note that <a href="c486a210-4712-1bab-f62e-40d5ed30d93a.htm">ISyncRoot</a> is NOT supported by this interceptor.
             </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="d410258c-b9ce-c076-58e3-c0c31238bb3d.htm">Cauldron.Interception</a><br />
    <strong>Assembly:</strong>
   Cauldron.Interception (in Cauldron.Interception.dll) Version: 1.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0ECCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cs','1','3');return false;">C#</a></div><div id="ID0ECCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','vb','2','3');return false;">VB</a></div><div id="ID0ECCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0ECCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID0ECCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IConstructorInterceptor</span></pre></div><div id="ID0ECCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">IConstructorInterceptor</span></pre></div><div id="ID0ECCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">IConstructorInterceptor</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0ECCA");</script></div><p>The <span class="selflink">IConstructorInterceptor</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="795f3cba-c59b-5087-5b8d-49ce32df708a.htm">OnBeforeInitialization</a></td><td><div class="summary">
            Invoked before the initialization of the class.
            <p />
            This happens before the base call which means that the instance has not been created yet. Use this with care.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="6becb407-c35c-4c23-e13b-102dcd392f85.htm">OnEnter</a></td><td><div class="summary">
            Invoked if an intercepted contructor has been called.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7f5fdb6b-1b12-93ee-a139-cb004750ac20.htm">OnException</a></td><td><div class="summary">
            Invoked if an intercepted construtor has raised an exception. The constructor will always rethrow
            the exception.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="eadc9b9c-3746-d404-1699-87e112d826a7.htm">OnExit</a></td><td><div class="summary">
            Invoked if the intercepted constructor has finished executing.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection">
             Sample implementation:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAGABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAGABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAGABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span>[AttributeUsage(AttributeTargets.Constructor, AllowMultiple = <span class="highlight-keyword">false</span>, Inherited = <span class="highlight-keyword">false</span>)]
<span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> TestConstructorInterceptorA : Attribute, IConstructorInterceptor
<span class="highlight-spacerShort"></span>{
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> OnBeforeInitialization(Type declaringType, MethodBase methodbase, <span class="highlight-keyword">object</span>[] values)
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> OnEnter(Type declaringType, <span class="highlight-keyword">object</span> instance, MethodBase methodbase, <span class="highlight-keyword">object</span>[] values)
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">public</span> <span class="highlight-keyword">bool</span> OnException(Exception e)
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>        <span class="highlight-comment">// Returning false will swallow the exception</span>
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">return</span> <span class="highlight-keyword">true</span>;
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> OnExit()
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAGABA");</script>
             The interceptor is also capable of handling attributes with parameters.
             <p />
             Your code:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> ConstructorInterceptorTestClass
<span class="highlight-spacerShort"></span>{
<span class="highlight-spacerShort"></span>    [TestConstructorInterceptorA]
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">public</span> ConstructorInterceptorTestClass(<span class="highlight-keyword">string</span> arg)
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABA");</script>
             What gets compiled:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> ConstructorInterceptorTestClass(<span class="highlight-keyword">string</span> arg)
<span class="highlight-spacerShort"></span>{
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> values = <span class="highlight-keyword">new</span> <span class="highlight-keyword">object</span>[] { arg };
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> constructorInterceptor = <span class="highlight-keyword">new</span> TestConstructorInterceptorA();
<span class="highlight-spacerShort"></span>    constructorInterceptor.OnBeforeInitialization(<span class="highlight-keyword">typeof</span>(ConstructorInterceptorTestClass), MethodBase.GetMethodFromHandle(methodof(ConstructorInterceptorTestClass..ctor()).MethodHandle, <span class="highlight-keyword">typeof</span>(ConstructorInterceptorTestClass).TypeHandle), values);
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">base</span>..ctor();
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">try</span>
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>           constructorInterceptor.OnEnter(<span class="highlight-keyword">typeof</span>(ConstructorInterceptorTestClass), <span class="highlight-keyword">this</span>, MethodBase.GetMethodFromHandle(methodof(ConstructorInterceptorTestClass..ctor()).MethodHandle, <span class="highlight-keyword">typeof</span>(ConstructorInterceptorTestClass).TypeHandle), values);
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">catch</span> (Exception e)
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>           <span class="highlight-keyword">if</span>(constructorInterceptor.OnException(e))
<span class="highlight-spacerShort"></span>           {
<span class="highlight-spacerShort"></span>               <span class="highlight-keyword">throw</span>;
<span class="highlight-spacerShort"></span>           }
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">finally</span>
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>           constructorInterceptor.OnExit();
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="d410258c-b9ce-c076-58e3-c0c31238bb3d.htm">Cauldron.Interception Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="https://raw.githubusercontent.com/Capgemini/Cauldron/master/LICENSE" target="_blank">https://raw.githubusercontent.com/Capgemini/Cauldron/master/LICENSE</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:alexander.schunk%40capgemini.com?Subject=Cauldron NetStandard Libraries">alexander.schunk@capgemini.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>