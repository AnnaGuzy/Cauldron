<ResourceDictionary x:Class="Cauldron.XAML.Theme.Styles.MiscStyle"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Cauldron.XAML.Theme.Styles"
             xmlns:localBehaviours="clr-namespace:Cauldron.XAML.Theme.Behaviours"
             xmlns:behaviours="clr-namespace:Cauldron.XAML.Interactivity;assembly=Cauldron.XAML.Interactivity"
             xmlns:validation="clr-namespace:Cauldron.XAML.Validation;assembly=Cauldron.XAML.Validation"
             xmlns:attached="clr-namespace:Cauldron.XAML.Interactivity.Attached;assembly=Cauldron.XAML.Interactivity"
             xmlns:t="clr-namespace:Cauldron.XAML.Theme"
             mc:Ignorable="d">

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.TextBrush}}" />
    </Style>

    <Style TargetType="Image">
        <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
        <Setter Property="RenderOptions.CachingHint" Value="Cache" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Auto" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.TextBrush}}" />
        <Setter Property="MaxWidth" Value="360" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="{StaticResource {x:Static t:CauldronTheme.LightBackgroundBrush}}" BorderBrush="{StaticResource {x:Static t:CauldronTheme.ButtonbackBrush}}"
                            BorderThickness="1" CornerRadius="4">
                        <ContentPresenter Margin="8" ContentTemplateSelector="{StaticResource CauldronTemplateSelector}">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Setter Property="TextAlignment" Value="Justify" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Popup">
        <Setter Property="Placement" Value="Bottom" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="PopupAnimation" Value="Slide" />
        <Setter Property="StaysOpen" Value="False" />
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
        <Setter Property="Background" Value="{StaticResource {x:Static t:CauldronTheme.LightBackgroundBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="MinHeight" Value="4" />
        <Setter Property="Height" Value="6" />
        <Setter Property="MaxHeight" Value="20" />
        <Setter Property="MaxWidth" Value="400" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="behaviours:StyleInteraction.Template">
            <Setter.Value>
                <behaviours:InteractionTemplate>
                    <localBehaviours:ProgressBarBehaviour />
                </behaviours:InteractionTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid ClipToBounds="True" x:Name="PART_Main">

                        <Grid.Resources>
                            <Storyboard x:Name="IndeterminateAnimation" x:Key="IndeterminateAnimation" RepeatBehavior="Forever">
                                <DoubleAnimation Storyboard.TargetName="EllipseGrid"
                                               Duration="0:0:3.917"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" From="0" To="0" />

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E1">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:1" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" KeySpline="0.4,0,0.6,1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:3" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationEndPosition)}" KeySpline="0.4,0,0.6,1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E2">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" KeySpline="0.4,0,0.6,1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationEndPosition)}" KeySpline="0.4,0,0.6,1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E3">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" KeySpline="0.4,0,0.6,1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationEndPosition)}" KeySpline="0.4,0,0.6,1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E4">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" KeySpline="0.4,0,0.6,1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationEndPosition)}" KeySpline="0.4,0,0.6,1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E5">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" KeySpline="0.4,0,0.6,1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationEndPosition)}" KeySpline="0.4,0,0.6,1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B1">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3" Value="100" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B2">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="100" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B3">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.833" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="100" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B4">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="100" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B5">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:1.167" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="100" />
                                </DoubleAnimationUsingKeyFrames>

                                <DoubleAnimation Storyboard.TargetName="EllipseGrid" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                <DoubleAnimation Storyboard.TargetName="PART_Indicator" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E1">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E2">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E3">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E4">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E5">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="EllipseGrid" Opacity="0">
                            <Grid.RenderTransform>
                                <TranslateTransform />
                            </Grid.RenderTransform>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="B1" Grid.Column="8" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <Ellipse x:Name="E1" Fill="{TemplateBinding Foreground}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                            <Rectangle Grid.Column="7" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Distance)}" />
                            <Border x:Name="B2" Grid.Column="6" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <Ellipse x:Name="E2" Fill="{TemplateBinding Foreground}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                            <Rectangle Grid.Column="5" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Distance)}" />
                            <Border x:Name="B3" Grid.Column="4" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <Ellipse x:Name="E3" Fill="{TemplateBinding Foreground}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                            <Rectangle Grid.Column="3" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Distance)}" />
                            <Border x:Name="B4" Grid.Column="2" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <Ellipse x:Name="E4" Fill="{TemplateBinding Foreground}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                            <Rectangle Grid.Column="1" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Distance)}" />
                            <Border x:Name="B5" Grid.Column="0" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <Ellipse x:Name="E5" Fill="{TemplateBinding Foreground}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                        </Grid>
                        <Border x:Name="PART_Indicator" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Rectangle x:Name="ProgressBarIndicator" Margin="{TemplateBinding Padding}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Value)}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="SelectionBrush" Value="{StaticResource ThemeLightAccentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ThemeTextBrush}" />
        <Setter Property="CaretBrush" Value="{StaticResource ThemeAccentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ThemeLightBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ThemeLightBackgroundBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="MinWidth" Value="57" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="AutoWordSelection" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="behaviours:StyleInteraction.Template">
            <Setter.Value>
                <behaviours:InteractionTemplate>
                    <validation:ValidationBehaviour />
                </behaviours:InteractionTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <Grid Margin="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition MinHeight="22" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border Margin="0" Padding="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                Grid.ColumnSpan="4" Grid.Row="1" Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" />

                        <StackPanel Grid.ColumnSpan="4" Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=(attached:TextBoxProperties.Header), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource KeyToLocalizedStringConverter}}"
                                 Visibility="{Binding Path=(attached:TextBoxProperties.Header), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullOrEmptyToVisibilityConverter}, ConverterParameter=True}"
                                 Margin="1,6,0,2" TextWrapping="NoWrap" TextAlignment="Left" TextTrimming="CharacterEllipsis" IsHitTestVisible="False" />

                            <TextBlock Text="*"
                                 Visibility="{Binding Path=(validation:ValidationProperties.IsMandatory), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Margin="3,-3,0,2" TextAlignment="Left" IsHitTestVisible="False" FontSize="22" Height="16" Foreground="Tomato" />
                        </StackPanel>

                        <TextBlock Grid.Row="1" Grid.Column="2" IsHitTestVisible="False"
                                       Text="{Binding Path=(attached:TextBoxProperties.AlternativeText), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource KeyToLocalizedStringConverter}}"
                                       Foreground="{StaticResource ThemeDisabledTextBrush}" Opacity="0.7" Margin="3"
                                       Visibility="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullOrEmptyToVisibilityConverter}, ConverterParameter=False}" />

                        <ScrollViewer Grid.Row="1" Grid.Column="2" Margin="3" x:Name="PART_ContentHost" TextElement.Foreground="{TemplateBinding Foreground}" />

                        <Ellipse Grid.Row="1" Grid.Column="1" Fill="Tomato" Width="14" Height="14" Margin="4,0" VerticalAlignment="Center" HorizontalAlignment="Center"
                                     ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(validation:ValidationProperties.Errors)}"
                                     Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(validation:ValidationProperties.HasErrors), Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <TextBlock Grid.Row="1" Grid.Column="1" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(validation:ValidationProperties.HasErrors), Converter={StaticResource BooleanToVisibilityConverter}}"
                                       Text="!" IsHitTestVisible="False" FontFamily="Segoe UI" FontWeight="ExtraBold" Foreground="{StaticResource ThemeHoveredTextBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" />

                        <ContentControl Margin="1" Grid.Column="3" Grid.Row="1" Template="{Binding Path=(attached:TextBoxProperties.ButtonsTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                                        Visibility="{Binding Path=(attached:TextBoxProperties.ButtonsTemplate), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToVisibilityConverter}}">
                            <ContentControl.Resources>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="MinHeight" Value="20" />
                                    <Setter Property="Width" Value="18" />
                                    <Setter Property="MinWidth" Value="16" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Padding" Value="2" />
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Background" Value="{StaticResource ThemeLightBackgroundBrush}" />
                                </Style>
                            </ContentControl.Resources>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource ThemeAccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ThemeDisabledTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>