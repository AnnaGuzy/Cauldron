<ResourceDictionary x:Class="Couldron.Themes.VisualStudio.Styles.ComboBoxStyles"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Couldron.Themes.VisualStudio"
             xmlns:localbehaviour="clr-namespace:Couldron.Themes.VisualStudio.Behaviours"
             xmlns:behaviour="clr-namespace:Couldron.Behaviours;assembly=Couldron"
             xmlns:collections="clr-namespace:Couldron.Collections;assembly=Couldron"
             xmlns:attached="clr-namespace:Couldron.Attached;assembly=Couldron"
             xmlns:controls="clr-namespace:Couldron.Controls;assembly=Couldron"
             mc:Ignorable="d">

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Border x:Name="Border" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeAccentBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeHoveredTextBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 3 3 L 6 0 Z" Fill="{TemplateBinding Foreground}" />
        </Border>
    </ControlTemplate>

    <Style TargetType="ComboBoxItem" x:Key="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="MinHeight" Value="17" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border" Margin="2,0" SnapsToDevicePixels="true" Background="Transparent" MinHeight="17">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeLightAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeLightBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="4,0" VerticalAlignment="Center" HorizontalAlignment="Left" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ThemeLightAccentBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource CouldronTemplateSelector}" />
        <Setter Property="Foreground" Value="{StaticResource ThemeTextBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ThemeLightBorderBrush}" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="behaviour:Interactivity.Template">
            <Setter.Value>
                <collections:InteractivityTemplate>
                    <localbehaviour:ComboBoxBehaviour />
                </collections:InteractivityTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid HorizontalAlignment="Stretch" MinWidth="{TemplateBinding MinWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ToggleButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ToggleButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeLightAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeDisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ToggleButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeDisabledTextBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ToggleButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeDisabledTextBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="14" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition MinHeight="22" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="{Binding Path=(attached:UIElementProperties.Header), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource KeyToLocalizedStringConverter}}"
                                 Visibility="{Binding Path=(attached:UIElementProperties.Header), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullOrEmptyTovisibilityConverter}, ConverterParameter=True}"
                                 Margin="1,6,0,2" Grid.ColumnSpan="4" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" IsHitTestVisible="False" />

                        <ToggleButton x:Name="border" Grid.ColumnSpan="4" Grid.Row="1" Background="{StaticResource ThemeLightBackgroundBrush}"
                                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ClickMode="Press" Focusable="False" Foreground="{StaticResource ThemeComboBoxArrowBrush}"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}" />
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <Rectangle x:Name="keyboardFocused" Grid.ColumnSpan="4" Grid.Row="1" IsHitTestVisible="False" StrokeThickness="1" Stroke="Transparent" />

                        <ToggleButton x:Name="ToggleButton" Grid.Row="1" Grid.Column="3" Width="14" Focusable="false" ClickMode="Press"
                                        Foreground="{StaticResource ThemeComboBoxArrowBrush}" HorizontalAlignment="Right"
                                        Background="{StaticResource ThemeLightBackgroundBrush}" BorderBrush="Transparent" Template="{StaticResource ComboBoxToggleButton}"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />

                        <ContentPresenter x:Name="ContentSite"
                            Grid.Row="1" Grid.Column="2"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="4,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Stretch">
                        </ContentPresenter>

                        <TextBox Grid.Row="1" Grid.Column="2" x:Name="PART_EditableTextBox" SelectionBrush="{StaticResource ThemeLightAccentBrush}" CaretBrush="{StaticResource ThemeAccentBrush}"
                                 Foreground="{StaticResource ThemeTextBrush}"
                                 Style="{x:Null}" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Center"
                                 Margin="4,0" Focusable="True" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"
                                 AcceptsReturn="False" AcceptsTab="False" AllowDrop="False" SnapsToDevicePixels="True" TextWrapping="NoWrap" />

                        <TextBlock Grid.Row="1" Grid.Column="2" IsHitTestVisible="False"
                                       Text="{Binding Path=(attached:UIElementProperties.AlternativeText), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource KeyToLocalizedStringConverter}}"
                                       Foreground="{StaticResource ThemeTextBrush}" Opacity="0.7" Margin="3"
                                       Visibility="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullOrEmptyTovisibilityConverter}, ConverterParameter=False}" />

                        <Popup x:Name="Popup" Grid.ColumnSpan="4" Grid.Row="1" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}">
                            <Border x:Name="DropDown" SnapsToDevicePixels="True" Margin="0,0,5,5" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        BorderThickness="1" BorderBrush="{StaticResource ThemeLightBorderBrush}" Background="{StaticResource ThemeDropdownBackgroundBrush}">
                                <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" Margin="0" />
                                </ScrollViewer>
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="3" BlurRadius="5" RenderingBias="Performance" Color="Black" Opacity="0.6" />
                                </Border.Effect>
                            </Border>
                        </Popup>

                        <Ellipse Grid.Row="1" Grid.Column="1" Fill="Tomato" Width="14" Height="14" Margin="4,0" VerticalAlignment="Center" HorizontalAlignment="Center"
                                     ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Validation.Errors), Converter={StaticResource ErrorCollectionConverter}}"
                                     Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <TextBlock Grid.Row="1" Grid.Column="1" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}"
                                       Text="!" IsHitTestVisible="False" FontFamily="Segoe UI" FontWeight="ExtraBold" Foreground="{StaticResource ThemeHoveredTextBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" />

                        <Rectangle Grid.Row="1" Fill="{StaticResource ThemeAccentBrush}" Margin="1"
                                       Visibility="{Binding Path=(attached:ValidationProperties.IsMandatory), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="4" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="keyboardFocused" Property="Stroke" Value="{StaticResource ThemeAccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ThemeDisabledTextBrush}" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDown" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:TreeViewComboBox">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <HierarchicalDataTemplate ItemsSource="{Binding Items}">
                    <ContentPresenter Content="{Binding}" />
                </HierarchicalDataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectedItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Button Content="{Binding}" Padding="2,0" Margin="1,0" MinWidth="0" MinHeight="0" Background="Transparent" BorderBrush="Transparent" VerticalAlignment="Center">
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Delete">
                                    <behaviour:Interaction.Behaviours>
                                        <behaviour:EventTrigger EventName="Click">
                                            <behaviour:InvokeMethodAction MethodName="RemoveSelectedItem" MethodParameters="Content" MethodOwnerType="controls:TreeViewComboBox" />
                                        </behaviour:EventTrigger>
                                    </behaviour:Interaction.Behaviours>
                                </MenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="behaviour:Interactivity.Template">
            <Setter.Value>
                <collections:InteractivityTemplate>
                    <localbehaviour:TreeViewComboBoxBehaviour />
                </collections:InteractivityTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:TreeViewComboBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ToggleButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ToggleButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeLightAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeDisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ToggleButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeDisabledTextBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ToggleButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ThemeDisabledTextBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable" />
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="14" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition MinHeight="22" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="{Binding Path=Header, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource KeyToLocalizedStringConverter}}"
                                 Visibility="{Binding Path=Header, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullOrEmptyTovisibilityConverter}, ConverterParameter=True}"
                                 Margin="1,6,0,2" Grid.ColumnSpan="4" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" IsHitTestVisible="False" />

                        <ToggleButton x:Name="border" Grid.ColumnSpan="4" Grid.Row="1" Background="{StaticResource ThemeLightBackgroundBrush}"
                                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ClickMode="Press" Focusable="False" Foreground="{StaticResource ThemeComboBoxArrowBrush}"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderBrush="{StaticResource ThemeLightBorderBrush}" BorderThickness="1">
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}" />
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <Rectangle x:Name="keyboardFocused" Grid.ColumnSpan="4" Grid.Row="1" IsHitTestVisible="False" StrokeThickness="1" Stroke="Transparent" />

                        <ToggleButton x:Name="ToggleButton" Grid.Row="1" Grid.Column="3" Focusable="false" ClickMode="Press" Foreground="{StaticResource ThemeComboBoxArrowBrush}"
                                        Background="{StaticResource ThemeLightBackgroundBrush}" BorderBrush="Transparent" Template="{StaticResource ComboBoxToggleButton}"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />

                        <ItemsControl VerticalAlignment="Center" HorizontalAlignment="Stretch" DisplayMemberPath="{TemplateBinding SelectedItemDisplayMemberPath}"
                                      Grid.Row="1" Grid.Column="2" Margin="1" Focusable="False"
                                      IsEnabled="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanInvertConverter}}"
                                      ItemsSource="{Binding Path=SelectedItems, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      ItemTemplate="{TemplateBinding SelectedItemTemplate}" ItemTemplateSelector="{x:Null}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>

                        <TextBlock Grid.Row="1" Grid.Column="2" IsHitTestVisible="False"
                                       Text="{Binding Path=AlternativeText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource KeyToLocalizedStringConverter}}"
                                       Foreground="{StaticResource ThemeTextBrush}" Opacity="0.7" Margin="3"
                                       Visibility="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullOrEmptyTovisibilityConverter}, ConverterParameter=False}" />

                        <Popup x:Name="Popup" Grid.ColumnSpan="4" Grid.Row="1" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Border x:Name="DropDown" SnapsToDevicePixels="True" Margin="0,0,5,5" Height="400" BorderThickness="1" BorderBrush="{StaticResource ThemeLightBorderBrush}" Background="{StaticResource ThemeDropdownBackgroundBrush}">
                                <TreeView ItemsSource="{TemplateBinding ItemsSource}" SelectedValuePath="{TemplateBinding SelectedValuePath}" MinWidth="300" BorderThickness="0" ItemTemplate="{TemplateBinding ItemTemplate}">
                                    <behaviour:Interaction.Behaviours>
                                        <localbehaviour:ComboBoxTreeViewBehaviours />
                                    </behaviour:Interaction.Behaviours>
                                </TreeView>

                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="3" BlurRadius="5" RenderingBias="Performance" Color="Black" Opacity="0.6" />
                                </Border.Effect>
                            </Border>
                        </Popup>

                        <Ellipse Grid.Row="1" Grid.Column="1" Fill="Tomato" Width="14" Height="14" Margin="4,0" VerticalAlignment="Center" HorizontalAlignment="Center"
                                     ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Validation.Errors), Converter={StaticResource ErrorCollectionConverter}}"
                                     Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <TextBlock Grid.Row="1" Grid.Column="1" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}"
                                       Text="!" IsHitTestVisible="False" FontFamily="Segoe UI" FontWeight="ExtraBold" Foreground="{StaticResource ThemeHoveredTextBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" />

                        <Rectangle Grid.Row="1" Fill="{StaticResource ThemeAccentBrush}" Margin="1"
                                       Visibility="{Binding Path=(attached:ValidationProperties.IsMandatory), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="4" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="keyboardFocused" Property="Stroke" Value="{StaticResource ThemeAccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ThemeDisabledTextBrush}" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDown" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>