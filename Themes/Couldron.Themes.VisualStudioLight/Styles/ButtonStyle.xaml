<ResourceDictionary x:Class="Couldron.Themes.VisualStudio.Styles.ButtonStyle"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Couldron.Themes.VisualStudio"
             xmlns:localbehaviour="clr-namespace:Couldron.Themes.VisualStudio.Behaviours"
             xmlns:behaviour="clr-namespace:Couldron.Behaviours;assembly=Couldron"
             xmlns:collections="clr-namespace:Couldron.Collections;assembly=Couldron"
             xmlns:attached="clr-namespace:Couldron.Attached;assembly=Couldron"
             mc:Ignorable="d">

    <Style TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ThemeButtonbackBrush}" />
        <Setter Property="Background" Value="{StaticResource ThemeLightBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ThemeTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="Border" Grid.Column="1" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ThemeAccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ThemeLightAccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ThemeLightAccentBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ThemeAccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ThemeAccentBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ThemeAccentBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ThemeHoveredTextBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ThemeDisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ThemeDisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ThemeDisabledTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2" StrokeThickness="1" Stroke="#60000000" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="TitleBarButtonStyle">
        <Setter Property="MinWidth" Value="34" />
        <Setter Property="Height" Value="26" />
        <Setter Property="Padding" Value="3,0" />
        <Setter Property="Foreground" Value="{StaticResource ThemeTextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle x:Name="background" Fill="{TemplateBinding Background}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="background" Property="Fill" Value="{StaticResource ThemeHoverLightBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ThemeAccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="background" Property="Fill" Value="{StaticResource ThemeAccentBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ThemeHoverLightBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ThemeDisabledTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="StrechedButtonWithImageStyle">
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="3,0" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource ThemeTextBrush}" />
        <Setter Property="Background" Value="{StaticResource ThemeBackgroundBrush}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="32" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.ColumnSpan="3" x:Name="background" Fill="{TemplateBinding Background}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />

                        <Rectangle Fill="{Binding (attached:ButtonProperties.CategoryColor), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                        <Rectangle Grid.Column="1" Fill="{StaticResource ThemeDarkOverlayBrush}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                        <Image Grid.Column="1" Source="{Binding (attached:ButtonProperties.Image), RelativeSource={RelativeSource TemplatedParent}}" Width="20" Height="20" Stretch="Uniform" Margin="0" />
                        <ContentPresenter Grid.Column="2" Margin="{TemplateBinding Padding}" HorizontalAlignment="Left" VerticalAlignment="Center" RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="background" Property="Fill" Value="{StaticResource ThemeHoverLightBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ThemeAccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="background" Property="Fill" Value="{StaticResource ThemeAccentBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ThemeHoverLightBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ThemeDisabledTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>